{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5de44aab-4634-4d9d-a80a-e3f8c4946c70",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import pandas_datareader as pdr"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "acc85b96-932d-421a-9e28-36a8687d64a8",
   "metadata": {},
   "source": [
    "* $H_0$: $\\text{mean}(\\text{INTC}_r) > \\text{mean}(\\text{AMD}_r)$\n",
    "* $H_a$: $\\text{mean}(\\text{INTC}_r) < \\text{mean}(\\text{AMD}_r)$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "758a29b5-dae0-4965-a2b4-bed702445ed7",
   "metadata": {},
   "outputs": [],
   "source": [
    "INTC = pdr.get_data_yahoo(\n",
    "    \"INTC\",\n",
    "    start=\"01/01/2017\",\n",
    "    interval=\"m\"\n",
    ")\n",
    "AMD = pdr.get_data_yahoo(\n",
    "    \"AMD\",\n",
    "    start=\"01/01/2017\",\n",
    "    interval=\"m\"\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ef6deecf-08c9-45b5-9ed2-91386f7601a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "def cc_returns(stock_df):\n",
    "    stock_df[\"R\"] = (stock_df[\"Close\"] / stock_df[\"Close\"].shift(1)) - 1\n",
    "    stock_df[\"r\"] = np.log(stock_df[\"Adj Close\"]) \\\n",
    "        - np.log(stock_df[\"Adj Close\"].shift(1))\n",
    "    stock_df.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "8ad7dfe9-93a5-4599-a53c-b780bf549402",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>R</th>\n",
       "      <th>r</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>38.450001</td>\n",
       "      <td>36.189999</td>\n",
       "      <td>36.610001</td>\n",
       "      <td>36.820000</td>\n",
       "      <td>456335100.0</td>\n",
       "      <td>31.593967</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-02-01</th>\n",
       "      <td>36.950001</td>\n",
       "      <td>34.840000</td>\n",
       "      <td>36.820000</td>\n",
       "      <td>36.200001</td>\n",
       "      <td>477551300.0</td>\n",
       "      <td>31.061966</td>\n",
       "      <td>-0.016839</td>\n",
       "      <td>-0.016982</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-03-01</th>\n",
       "      <td>36.299999</td>\n",
       "      <td>34.660000</td>\n",
       "      <td>35.849998</td>\n",
       "      <td>36.070000</td>\n",
       "      <td>546151800.0</td>\n",
       "      <td>31.171381</td>\n",
       "      <td>-0.003591</td>\n",
       "      <td>0.003516</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-04-01</th>\n",
       "      <td>37.500000</td>\n",
       "      <td>35.209999</td>\n",
       "      <td>36.189999</td>\n",
       "      <td>36.150002</td>\n",
       "      <td>444122200.0</td>\n",
       "      <td>31.240509</td>\n",
       "      <td>0.002218</td>\n",
       "      <td>0.002215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-05-01</th>\n",
       "      <td>37.169998</td>\n",
       "      <td>35.020000</td>\n",
       "      <td>36.110001</td>\n",
       "      <td>36.110001</td>\n",
       "      <td>432927300.0</td>\n",
       "      <td>31.205946</td>\n",
       "      <td>-0.001107</td>\n",
       "      <td>-0.001107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-01</th>\n",
       "      <td>46.639999</td>\n",
       "      <td>40.310001</td>\n",
       "      <td>43.720001</td>\n",
       "      <td>44.419998</td>\n",
       "      <td>773236800.0</td>\n",
       "      <td>43.631149</td>\n",
       "      <td>0.019041</td>\n",
       "      <td>0.018862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-06-01</th>\n",
       "      <td>44.930000</td>\n",
       "      <td>36.599998</td>\n",
       "      <td>44.770000</td>\n",
       "      <td>37.410000</td>\n",
       "      <td>783353000.0</td>\n",
       "      <td>37.036106</td>\n",
       "      <td>-0.157812</td>\n",
       "      <td>-0.163878</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-01</th>\n",
       "      <td>40.730000</td>\n",
       "      <td>35.240002</td>\n",
       "      <td>37.090000</td>\n",
       "      <td>36.310001</td>\n",
       "      <td>792839800.0</td>\n",
       "      <td>35.947102</td>\n",
       "      <td>-0.029404</td>\n",
       "      <td>-0.029845</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-01</th>\n",
       "      <td>37.689999</td>\n",
       "      <td>34.400002</td>\n",
       "      <td>36.049999</td>\n",
       "      <td>36.110001</td>\n",
       "      <td>465362100.0</td>\n",
       "      <td>35.749100</td>\n",
       "      <td>-0.005508</td>\n",
       "      <td>-0.005523</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-15</th>\n",
       "      <td>36.389999</td>\n",
       "      <td>35.710098</td>\n",
       "      <td>36.099998</td>\n",
       "      <td>36.331200</td>\n",
       "      <td>9926734.0</td>\n",
       "      <td>36.331200</td>\n",
       "      <td>0.006126</td>\n",
       "      <td>0.016152</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>69 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 High        Low       Open      Close       Volume  \\\n",
       "Date                                                                  \n",
       "2017-01-01  38.450001  36.189999  36.610001  36.820000  456335100.0   \n",
       "2017-02-01  36.950001  34.840000  36.820000  36.200001  477551300.0   \n",
       "2017-03-01  36.299999  34.660000  35.849998  36.070000  546151800.0   \n",
       "2017-04-01  37.500000  35.209999  36.189999  36.150002  444122200.0   \n",
       "2017-05-01  37.169998  35.020000  36.110001  36.110001  432927300.0   \n",
       "...               ...        ...        ...        ...          ...   \n",
       "2022-05-01  46.639999  40.310001  43.720001  44.419998  773236800.0   \n",
       "2022-06-01  44.930000  36.599998  44.770000  37.410000  783353000.0   \n",
       "2022-07-01  40.730000  35.240002  37.090000  36.310001  792839800.0   \n",
       "2022-08-01  37.689999  34.400002  36.049999  36.110001  465362100.0   \n",
       "2022-08-15  36.389999  35.710098  36.099998  36.331200    9926734.0   \n",
       "\n",
       "            Adj Close         R         r  \n",
       "Date                                       \n",
       "2017-01-01  31.593967       NaN       NaN  \n",
       "2017-02-01  31.061966 -0.016839 -0.016982  \n",
       "2017-03-01  31.171381 -0.003591  0.003516  \n",
       "2017-04-01  31.240509  0.002218  0.002215  \n",
       "2017-05-01  31.205946 -0.001107 -0.001107  \n",
       "...               ...       ...       ...  \n",
       "2022-05-01  43.631149  0.019041  0.018862  \n",
       "2022-06-01  37.036106 -0.157812 -0.163878  \n",
       "2022-07-01  35.947102 -0.029404 -0.029845  \n",
       "2022-08-01  35.749100 -0.005508 -0.005523  \n",
       "2022-08-15  36.331200  0.006126  0.016152  \n",
       "\n",
       "[69 rows x 8 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cc_returns(INTC)\n",
    "INTC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7c1d4378-ddc6-4955-92f2-56fe2d0df590",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Open</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "      <th>Adj Close</th>\n",
       "      <th>R</th>\n",
       "      <th>r</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2017-01-01</th>\n",
       "      <td>11.690000</td>\n",
       "      <td>9.420000</td>\n",
       "      <td>11.420000</td>\n",
       "      <td>10.370000</td>\n",
       "      <td>878890400</td>\n",
       "      <td>10.370000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-02-01</th>\n",
       "      <td>15.550000</td>\n",
       "      <td>10.810000</td>\n",
       "      <td>10.900000</td>\n",
       "      <td>14.460000</td>\n",
       "      <td>1571999700</td>\n",
       "      <td>14.460000</td>\n",
       "      <td>0.394407</td>\n",
       "      <td>0.332469</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-03-01</th>\n",
       "      <td>15.090000</td>\n",
       "      <td>12.380000</td>\n",
       "      <td>15.080000</td>\n",
       "      <td>14.550000</td>\n",
       "      <td>1733593200</td>\n",
       "      <td>14.550000</td>\n",
       "      <td>0.006224</td>\n",
       "      <td>0.006205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-04-01</th>\n",
       "      <td>14.740000</td>\n",
       "      <td>12.220000</td>\n",
       "      <td>14.600000</td>\n",
       "      <td>13.300000</td>\n",
       "      <td>943383500</td>\n",
       "      <td>13.300000</td>\n",
       "      <td>-0.085911</td>\n",
       "      <td>-0.089827</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017-05-01</th>\n",
       "      <td>13.630000</td>\n",
       "      <td>9.850000</td>\n",
       "      <td>13.430000</td>\n",
       "      <td>11.190000</td>\n",
       "      <td>1716437000</td>\n",
       "      <td>11.190000</td>\n",
       "      <td>-0.158647</td>\n",
       "      <td>-0.172744</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-05-01</th>\n",
       "      <td>104.550003</td>\n",
       "      <td>83.269997</td>\n",
       "      <td>85.660004</td>\n",
       "      <td>101.860001</td>\n",
       "      <td>2898334400</td>\n",
       "      <td>101.860001</td>\n",
       "      <td>0.191066</td>\n",
       "      <td>0.174849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-06-01</th>\n",
       "      <td>109.570000</td>\n",
       "      <td>75.480003</td>\n",
       "      <td>102.129997</td>\n",
       "      <td>76.470001</td>\n",
       "      <td>2030987200</td>\n",
       "      <td>76.470001</td>\n",
       "      <td>-0.249264</td>\n",
       "      <td>-0.286701</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-07-01</th>\n",
       "      <td>94.809998</td>\n",
       "      <td>71.599998</td>\n",
       "      <td>75.190002</td>\n",
       "      <td>94.470001</td>\n",
       "      <td>1633201100</td>\n",
       "      <td>94.470001</td>\n",
       "      <td>0.235386</td>\n",
       "      <td>0.211384</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-01</th>\n",
       "      <td>104.589996</td>\n",
       "      <td>93.620003</td>\n",
       "      <td>95.589996</td>\n",
       "      <td>100.830002</td>\n",
       "      <td>979309000</td>\n",
       "      <td>100.830002</td>\n",
       "      <td>0.067323</td>\n",
       "      <td>0.065154</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022-08-15</th>\n",
       "      <td>101.849998</td>\n",
       "      <td>99.800201</td>\n",
       "      <td>100.504997</td>\n",
       "      <td>100.820000</td>\n",
       "      <td>32244093</td>\n",
       "      <td>100.820000</td>\n",
       "      <td>-0.000099</td>\n",
       "      <td>-0.000099</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>69 rows Ã— 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  High        Low        Open       Close      Volume  \\\n",
       "Date                                                                    \n",
       "2017-01-01   11.690000   9.420000   11.420000   10.370000   878890400   \n",
       "2017-02-01   15.550000  10.810000   10.900000   14.460000  1571999700   \n",
       "2017-03-01   15.090000  12.380000   15.080000   14.550000  1733593200   \n",
       "2017-04-01   14.740000  12.220000   14.600000   13.300000   943383500   \n",
       "2017-05-01   13.630000   9.850000   13.430000   11.190000  1716437000   \n",
       "...                ...        ...         ...         ...         ...   \n",
       "2022-05-01  104.550003  83.269997   85.660004  101.860001  2898334400   \n",
       "2022-06-01  109.570000  75.480003  102.129997   76.470001  2030987200   \n",
       "2022-07-01   94.809998  71.599998   75.190002   94.470001  1633201100   \n",
       "2022-08-01  104.589996  93.620003   95.589996  100.830002   979309000   \n",
       "2022-08-15  101.849998  99.800201  100.504997  100.820000    32244093   \n",
       "\n",
       "             Adj Close         R         r  \n",
       "Date                                        \n",
       "2017-01-01   10.370000       NaN       NaN  \n",
       "2017-02-01   14.460000  0.394407  0.332469  \n",
       "2017-03-01   14.550000  0.006224  0.006205  \n",
       "2017-04-01   13.300000 -0.085911 -0.089827  \n",
       "2017-05-01   11.190000 -0.158647 -0.172744  \n",
       "...                ...       ...       ...  \n",
       "2022-05-01  101.860001  0.191066  0.174849  \n",
       "2022-06-01   76.470001 -0.249264 -0.286701  \n",
       "2022-07-01   94.470001  0.235386  0.211384  \n",
       "2022-08-01  100.830002  0.067323  0.065154  \n",
       "2022-08-15  100.820000 -0.000099 -0.000099  \n",
       "\n",
       "[69 rows x 8 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cc_returns(AMD)\n",
    "AMD"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5659ebf8-6ccf-417d-94d3-7181b57540bf",
   "metadata": {},
   "outputs": [],
   "source": [
    "MONTHS_INTC = INTC[\"r\"].count()\n",
    "MONTHS_AMD = AMD[\"r\"].count()\n",
    "MONTHS = max(MONTHS_INTC, MONTHS_AMD)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "087cb958-eac0-4596-ae79-c12e1cb3c81f",
   "metadata": {},
   "outputs": [],
   "source": [
    "rINTC_std = INTC[\"r\"].std()\n",
    "rAMD_std = AMD[\"r\"].std()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "781633a1-4c36-4ec7-b2d3-6674afafeb6e",
   "metadata": {},
   "outputs": [],
   "source": [
    "rINTC_var = INTC[\"r\"].var()\n",
    "rAMD_var = AMD[\"r\"].var()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f66637e2-518d-468e-9ec2-2dd4c89a0f49",
   "metadata": {},
   "outputs": [],
   "source": [
    "rINTC_mu = INTC[\"r\"].mean()\n",
    "rAMD_mu = AMD[\"r\"].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "fd46c8a7-c9a7-449b-b5bc-e49f9611ad67",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.03139278038859339"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dif = rINTC_mu - rAMD_mu\n",
    "dif"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "dfbd2b97-f695-492d-9c9c-97199b9fe694",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.021501929045135256"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "std = np.sqrt((rINTC_var + rAMD_var) / MONTHS)\n",
    "std"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "1d593b4d-857a-462b-87e2-784e25277cfa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-1.459998324926847"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t = (dif - 0) / std\n",
    "t"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
